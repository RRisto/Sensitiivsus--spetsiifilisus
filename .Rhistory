aes(x=x,ymax=y, fill="valenegatiivsed"),ymin=0, alpha=0.2)+
geom_ribbon(data=subset(gg,name=="terved" & x>=piir),
aes(x=x,ymax=y, fill="valepositiivsed"),ymin=0, alpha=0.2)+
geom_vline(xintercept=piir, colour="blue", size=1)+
scale_fill_discrete(name="")
}
graafik(data=andmetabel(), qt=0.9)
graafik=function(data=data, qt=0.95) {
gg <- data[,list(x=density(value)$x, y=density(value)$y),by="name"]
#piir, kus kohast tervete seas jääb qt% vaatlustest vasakule
#ehk test nätab, et on terved
sub=subset(data, name=="terved", select= c(value))
piir=quantile(sub$value, c(qt))
library(ggplot2)
ggplot(data, aes(x=value))+
geom_density(aes(group=name), alpha=0.3)+
geom_ribbon(data=subset(gg,name=="haiged" & x<=piir),
aes(x=x,ymax=y, fill="valenegatiivsed"),ymin=0, alpha=0.3)+
geom_ribbon(data=subset(gg,name=="terved" & x>=piir),
aes(x=x,ymax=y, fill="valepositiivsed"),ymin=0, alpha=0.3)+
geom_vline(xintercept=piir, colour="blue", size=1)+
scale_fill_discrete(name="")
}
graafik(data=andmetabel(), qt=0.9)
graafik=function(data=data, qt=0.95) {
gg <- data[,list(x=density(value)$x, y=density(value)$y),by="name"]
#piir, kus kohast tervete seas jääb qt% vaatlustest vasakule
#ehk test nätab, et on terved
sub=subset(data, name=="terved", select= c(value))
piir=quantile(sub$value, c(qt))
library(ggplot2)
ggplot(data, aes(x=value))+
geom_density(aes(group=name))+
geom_ribbon(data=subset(gg,name=="haiged" & x<=piir),
aes(x=x,ymax=y, fill="valenegatiivsed"),ymin=0, alpha=0.3)+
geom_ribbon(data=subset(gg,name=="terved" & x>=piir),
aes(x=x,ymax=y, fill="valepositiivsed"),ymin=0, alpha=0.3)+
geom_vline(xintercept=piir, colour="blue", size=1)+
scale_fill_discrete(name="")
}
graafik(data=andmetabel(), qt=0.9)
graafik=function(data=data, qt=0.95) {
gg <- data[,list(x=density(value)$x, y=density(value)$y),by="name"]
#piir, kus kohast tervete seas jääb qt% vaatlustest vasakule
#ehk test nätab, et on terved
sub=subset(data, name=="terved", select= c(value))
piir=quantile(sub$value, c(qt))
library(ggplot2)
ggplot(data, aes(x=value))+
geom_density(aes(group=name))+
geom_ribbon(data=subset(gg,name=="haiged" & x<=piir),
aes(x=x,ymax=y, fill="valenegatiivsed"),ymin=0, alpha=0.6)+
geom_ribbon(data=subset(gg,name=="terved" & x>=piir),
aes(x=x,ymax=y, fill="valepositiivsed"),ymin=0, alpha=0.6)+
geom_vline(xintercept=piir, colour="blue", size=1)+
scale_fill_discrete(name="")
}
graafik(data=andmetabel(), qt=0.9)
graafik=function(data=data, qt=0.95) {
gg <- data[,list(x=density(value)$x, y=density(value)$y),by="name"]
#piir, kus kohast tervete seas jääb qt% vaatlustest vasakule
#ehk test nätab, et on terved
sub=subset(data, name=="terved", select= c(value))
piir=quantile(sub$value, c(qt))
library(ggplot2)
ggplot(data, aes(x=value))+
geom_density(aes(group=name), alpha=0.5)+
geom_ribbon(data=subset(gg,name=="haiged" & x<=piir),
aes(x=x,ymax=y, fill="valenegatiivsed"),ymin=0, alpha=0.5)+
geom_ribbon(data=subset(gg,name=="terved" & x>=piir),
aes(x=x,ymax=y, fill="valepositiivsed"),ymin=0, alpha=0.5)+
geom_vline(xintercept=piir, colour="blue", size=1)+
scale_fill_discrete(name="")
}
graafik=function(data=data, qt=0.95) {
gg <- data[,list(x=density(value)$x, y=density(value)$y),by="name"]
#piir, kus kohast tervete seas jääb qt% vaatlustest vasakule
#ehk test nätab, et on terved
sub=subset(data, name=="terved", select= c(value))
piir=quantile(sub$value, c(qt))
library(ggplot2)
ggplot(data, aes(x=value))+
geom_density(aes(group=name), alpha=0.4)+
geom_ribbon(data=subset(gg,name=="haiged" & x<=piir),
aes(x=x,ymax=y, fill="valenegatiivsed"),ymin=0, alpha=0.4)+
geom_ribbon(data=subset(gg,name=="terved" & x>=piir),
aes(x=x,ymax=y, fill="valepositiivsed"),ymin=0, alpha=0.4)+
geom_vline(xintercept=piir, colour="blue", size=1)+
scale_fill_discrete(name="")
}
graafik(data=andmetabel(), qt=0.9)
graafik(data=andmetabel(nr1=100, nr2=100), qt=0.9)
tabel(data=andmetabel(nr1=100, nr2=100), qt=0.9)
tabel(data=andmetabel(nr1=1000, nr2=1000), qt=0.9)
tabel(data=andmetabel(nr1=10000, nr2=10000), qt=0.9)
tabel(data=andmetabel(nr1=100000, nr2=100000), qt=0.9)
graafik(data=andmetabel(nr1=100000, nr2=100000), qt=0.9)
graafik(data=andmetabel(nr1=1000000, nr2=1000000), qt=0.9)
tabel(data=andmetabel(nr1=1000000, nr2=1000000), qt=0.9)
tabel(data=andmetabel(nr1=100, nr2=100), qt=0.9)
tabel(data=andmetabel(nr1=200, nr2=200), qt=0.9)
tabel=function(data=data, qt=0.5) {
sub2=subset(data, name=="terved", select= c(value))
piir=quantile(sub2$value, c(qt))
#õiged positiivsed (kes on haiged ja test seda ka näitab)
truepos=nrow(subset(data, name=="haiged"& value>piir))
#valepositiivsed, need, kes on terved, kuid test näitab haigena
falsepos=nrow(subset(data, name=="terved"&value>piir))
#õiged negatiivsed (kes on terved ja ka test nii näitab)
trueneg=nrow(subset(data, name=="terved"&value<=piir))
#valengeatiivsed (need, kes on haiged, kuid test näitab tervena)
falseneg=nrow(subset(data, name=="haiged"&value<=piir))
naitaja=c("sensitiivsus (testi võimsus)", "spetsiifilisus",
"valepositiivsete määr (I tüüpi viga)",
"valenegatiivsete määr (II tüüpi viga)"
"positive predictive value",
"negative predictive value")
vaartus=c(round(truepos/(falseneg+truepos),2),
round(trueneg/(trueneg+falsepos),2),
1-round(trueneg/(trueneg+falsepos),2),
1-round(truepos/(falseneg+truepos),2),
round(truepos/(truepos+falsepos),2),
round(trueneg/(trueneg+falseneg),2))
data.frame(naitaja, vaartus)
}
tabel=function(data=data, qt=0.5) {
sub2=subset(data, name=="terved", select= c(value))
piir=quantile(sub2$value, c(qt))
#õiged positiivsed (kes on haiged ja test seda ka näitab)
truepos=nrow(subset(data, name=="haiged"& value>piir))
#valepositiivsed, need, kes on terved, kuid test näitab haigena
falsepos=nrow(subset(data, name=="terved"&value>piir))
#õiged negatiivsed (kes on terved ja ka test nii näitab)
trueneg=nrow(subset(data, name=="terved"&value<=piir))
#valengeatiivsed (need, kes on haiged, kuid test näitab tervena)
falseneg=nrow(subset(data, name=="haiged"&value<=piir))
naitaja=c("sensitiivsus (testi võimsus)", "spetsiifilisus",
"valepositiivsete määr (I tüüpi viga)",
"valenegatiivsete määr (II tüüpi viga)",
"positive predictive value",
"negative predictive value")
vaartus=c(round(truepos/(falseneg+truepos),2),
round(trueneg/(trueneg+falsepos),2),
1-round(trueneg/(trueneg+falsepos),2),
1-round(truepos/(falseneg+truepos),2),
round(truepos/(truepos+falsepos),2),
round(trueneg/(trueneg+falseneg),2))
data.frame(naitaja, vaartus)
}
tabel(andmetable())
tabel(andmetabel())
tabel=function(data=data, qt=0.5) {
sub2=subset(data, name=="terved", select= c(value))
piir=quantile(sub2$value, c(qt))
#õiged positiivsed (kes on haiged ja test seda ka näitab)
truepos=nrow(subset(data, name=="haiged"& value>piir))
#valepositiivsed, need, kes on terved, kuid test näitab haigena
falsepos=nrow(subset(data, name=="terved"&value>piir))
#õiged negatiivsed (kes on terved ja ka test nii näitab)
trueneg=nrow(subset(data, name=="terved"&value<=piir))
#valengeatiivsed (need, kes on haiged, kuid test näitab tervena)
falseneg=nrow(subset(data, name=="haiged"&value<=piir))
naitaja=c("sensitiivsus (testi võimsus)", "spetsiifilisus",
"valepositiivsete määr (I tüüpi viga)",
"valenegatiivsete määr (II tüüpi viga)",
"positive predictive value",
"negative predictive value")
vaartus=c(round(truepos/(falseneg+truepos),3),
round(trueneg/(trueneg+falsepos),3),
1-round(trueneg/(trueneg+falsepos),3),
1-round(truepos/(falseneg+truepos),3),
round(truepos/(truepos+falsepos),3),
round(trueneg/(trueneg+falseneg),3))
data.frame(naitaja, vaartus)
}
tabel(andmetabel())
graafik(andmetabel())
graafik(andmetabel())
tabel(andmetabel())
tabel(andmetabel())
tabel(andmetabel(), qt=0.95)
tabel=function(data=data, qt=0.5) {
sub2=subset(data, name=="terved", select= c(value))
piir=quantile(sub2$value, c(qt))
#õiged positiivsed (kes on haiged ja test seda ka näitab)
truepos=nrow(subset(data, name=="haiged"& value>piir))
#valepositiivsed, need, kes on terved, kuid test näitab haigena
falsepos=nrow(subset(data, name=="terved"&value>piir))
#õiged negatiivsed (kes on terved ja ka test nii näitab)
trueneg=nrow(subset(data, name=="terved"&value<=piir))
#valengeatiivsed (need, kes on haiged, kuid test näitab tervena)
falseneg=nrow(subset(data, name=="haiged"&value<=piir))
näitaja=c("sensitiivsus (testi võimsus)", "spetsiifilisus",
"valepositiivsete määr (I tüüpi viga)",
"valenegatiivsete määr (II tüüpi viga)",
"positive predictive value",
"negative predictive value")
vaartus=c(round(truepos/(falseneg+truepos),3),
round(trueneg/(trueneg+falsepos),3),
1-round(trueneg/(trueneg+falsepos),3),
1-round(truepos/(falseneg+truepos),3),
round(truepos/(truepos+falsepos),3),
round(trueneg/(trueneg+falseneg),3))
data.frame(näitaja, vaartus)
}
tabel(andmetabel(), qt=0.95)
tabel=function(data=data, qt=0.5) {
sub2=subset(data, name=="terved", select= c(value))
piir=quantile(sub2$value, c(qt))
#õiged positiivsed (kes on haiged ja test seda ka näitab)
truepos=nrow(subset(data, name=="haiged"& value>piir))
#valepositiivsed, need, kes on terved, kuid test näitab haigena
falsepos=nrow(subset(data, name=="terved"&value>piir))
#õiged negatiivsed (kes on terved ja ka test nii näitab)
trueneg=nrow(subset(data, name=="terved"&value<=piir))
#valengeatiivsed (need, kes on haiged, kuid test näitab tervena)
falseneg=nrow(subset(data, name=="haiged"&value<=piir))
näitaja=c("sensitiivsus (testi võimsus)", "spetsiifilisus",
"valepositiivsete määr (I tüüpi viga)",
"valenegatiivsete määr (II tüüpi viga)",
"positive predictive value",
"negative predictive value")
väärtus=c(round(truepos/(falseneg+truepos),3),
round(trueneg/(trueneg+falsepos),3),
1-round(trueneg/(trueneg+falsepos),3),
1-round(truepos/(falseneg+truepos),3),
round(truepos/(truepos+falsepos),3),
round(trueneg/(trueneg+falseneg),3))
data.frame(näitaja, väärtus)
}
tabel(andmetabel(), qt=0.95)
tabel(andmetabel(mean2=1), qt=0.95)
graafik(andmetabel(mean2=1), qt=0.95)
tabel(andmetabel(mean2=1), qt=0.95)
tabel(andmetabel(mean2=4), qt=0.95)
graafik(andmetabel(mean2=4), qt=0.95)
graafik(andmetabel(mean2=5), qt=0.95)
tabel(andmetabel(mean2=5), qt=0.95)
graafik(andmetabel(),
)''
graafik(andmetabel())
tabel(andmetabel())
improvements = with(sleep, extra[group == 2])
improvements
#We begin our analysis by computing N and the t statistic from the data:
N = length(improvements)
t = mean(improvements)/sd(improvements) * sqrt(N)
t
deltaHat = t/sqrt(N)
deltaHat
dt(t, df = 9, ncp = 1 * sqrt(10))/dt(t, df = 9)
dt(t, df = 9, ncp = 1 * sqrt(10))/dt(t, df = 9)
dt(t, df = 9)/dt(t, df = 9)
install.packages(BayesFactor)
install.packages("BayesFactor")
library(BayesFactor)
ttestBF(improvements, nullInterval = c(0, Inf))
improvements
ttestBF(improvements, nullInterval = c(0.1, Inf))
graafik(andmetabel())
tabel(andmetabel())
attributes(tabel)
arguments(tabel)
arguments(tabel()()
)
args(tabel)
args(graafik)
args(andmetabel)
graafik(andmetabel(sd2=2))
tabel(andmetabel(sd2=2))
tabel(andmetabel(sd2=2), qt=0.05)
graafik(andmetabel(sd2=2), qt=0.05)
graafik(andmetabel(sd2=2), qt=0.95)
graafik(andmetabel(sd2=3), qt=0.95)
graafik(andmetabel(sd2=3, sd1=3), qt=0.95)
tabel(andmetabel(sd2=3, sd1=3), qt=0.95)
tabel(andmetabel(sd2=3, sd1=1), qt=0.95)
graafik(andmetabel(sd2=3, sd1=1), qt=0.95)
graafik(andmetabel())
tabel=function(data=data, qt=0.95) {
sub2=subset(data, name=="terved", select= c(value))
piir=quantile(sub2$value, c(qt))
#õiged positiivsed (kes on haiged ja test seda ka näitab)
truepos=nrow(subset(data, name=="haiged" & value>piir))
#valepositiivsed, need, kes on terved, kuid test näitab haigena
falsepos=nrow(subset(data, name=="terved" & value>piir))
#õiged negatiivsed (kes on terved ja ka test nii näitab)
trueneg=nrow(subset(data, name=="terved" & value<=piir))
#valengeatiivsed (need, kes on haiged, kuid test näitab tervena)
falseneg=nrow(subset(data, name=="haiged" & value<=piir))
näitaja=c("sensitiivsus (testi võimsus)", "spetsiifilisus",
"valepositiivsete määr (I tüüpi viga)",
"valenegatiivsete määr (II tüüpi viga)",
"positive predictive value",
"negative predictive value")
väärtus=c(round(truepos/(falseneg+truepos),3),
round(trueneg/(trueneg+falsepos),3),
1-round(trueneg/(trueneg+falsepos),3),
1-round(truepos/(falseneg+truepos),3),
round(truepos/(truepos+falsepos),3),
round(trueneg/(trueneg+falseneg),3))
data.frame(näitaja, väärtus)
}
tabel(andmetabel())
values=data.frame(rnorm(n=10000, mean=0, sd=1))
View(values)
proov=andmetabel()
View(proov)
View(data)
population=10000
spec=0.95
sens=0.8
ratio=0.1 #haigete osakaal
haige=c(population*ratio*sens, population*ratio*(1-sens))
haige''
haige
haige=c(population*ratio*sens, population*ratio*(1-sens))
haige=c(population*ratio*sens, population*ratio*(1-sens))
haige
population=100
spec=0.95
sens=0.81
ratio=0.1 #haigete osakaal
haige=c(population*ratio*sens, population*ratio*(1-sens))
haige
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
haige
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
terve
data.frame(haige, terve)
nimed=c("test pos", "test neg")
data.frame(nimed, 'haige, terve)
data.frame(nimed, haige, terve)
)
))
''
'
data.frame(nimed, haige, terve)
data.frame(nimed, haige, terve)
test_summary=data.frame(nimed, haige, terve)
test_summary
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
nimed=c("test positiivne", "test negatiivne")
test_summary=data.frame(nimed, haige, terve)
test_summary
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
test_summary
cov(c(1,2,3), c(1,2,3))
cov(c(1.2,2.3,3.4), c(1.2,2.3,3.4))
population=10000
spec=0.95
sens=0.81
ratio=0.1 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
test_summary
population=10000
spec=0.95
sens=0.81
ratio=0.5 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
population=20000
spec=0.95
sens=0.81
ratio=0.5 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
test_summary
install.packages(pander)
install.packages("pander")
library(pander)
t <- mtcars[1:3, 1:5]
emphasize.cols(1)
emphasize.rows(1)
pandoc.table(t)
library(devtools)
install_github(repo = "highlightHTML", username = "lebebr01")
library(highlightHTML)
tags <- c("#bgred {background-color: #FF0000;}", "#bgblue {background-color: #0000FF;}")
highlightHTMLcells(input = "path/to/file", output = "path/to/saved/file", updateCSS = TRUE,
tags = tags)
set.seed(123)
df <- data.frame(id       = sample(1:100, 20, replace = TRUE),
inputval = sample(seq(0, 1, by=0.01), 20, replace = TRUE),
outcome  = sample(1:4, 20, replace = TRUE))
cols <- with(df, ifelse(outcome == 1, 'magenta', 'white'))
library(Gmisc)
htmlTable(as.matrix(df), altcol = cols,
rgroup = '', n.rgroup = rep(1, length(cols)))
instaal.packages("Gmisc")
install.packages("Gmisc")
install.packages("htmlTable")
set.seed(123)
df <- data.frame(id       = sample(1:100, 20, replace = TRUE),
inputval = sample(seq(0, 1, by=0.01), 20, replace = TRUE),
outcome  = sample(1:4, 20, replace = TRUE))
cols <- with(df, ifelse(outcome == 1, 'magenta', 'white'))
library(Gmisc)
htmlTable(as.matrix(df), altcol = cols,
rgroup = '', n.rgroup = rep(1, length(cols)))
set.seed(123)
df <- data.frame(id       = sample(1:100, 20, replace = TRUE),
inputval = sample(seq(0, 1, by=0.01), 20, replace = TRUE),
outcome  = sample(1:4, 20, replace = TRUE))
cols <- with(df, ifelse(outcome == 1, 'magenta', 'white'))
library(Gmisc)
htmlTable(as.matrix(df), 'col.rgroup = cols,
rgroup = '', n.rgroup = rep(1, length(cols)))
set.seed(123)
df <- data.frame(id       = sample(1:100, 20, replace = TRUE),
inputval = sample(seq(0, 1, by=0.01), 20, replace = TRUE),
outcome  = sample(1:4, 20, replace = TRUE))
cols <- with(df, ifelse(outcome == 1, 'magenta', 'white'))
library(Gmisc)
htmlTable(as.matrix(df), col.rgroup = cols,
rgroup = '', n.rgroup = rep(1, length(cols)))
500/10000
population=20000
spec=0.95
sens=0.81
ratio=0.05 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
test_summary
pospred=haige[1]/(haige[1]+terve[1])
pospred
population=20000
spec=0.95
sens=0.81
ratio=0.05 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
pospred=haige[1]/(haige[1]+terve[1])
pospred
haige[1]
population=20000
spec=0.95
sens=0.81
ratio=0.5 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
pospred=haige[1]/(haige[1]+terve[1])
pospred
population=20000
spec=0.95
sens=0.638
ratio=0.5 #haigete osakaal
haige=c(round(population*ratio*sens, 0), round(population*ratio*(1-sens), 0))
terve=c(round(population*(1-ratio)*(1-spec), 0), round(population*(1-ratio)*spec, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
pospred=haige[1]/(haige[1]+terve[1])
pospred
negpred=haige[2]/(haige[2]+terve[2])
negpred
negpred=terve[2]/(haige[2]+terve[2])
negpred
data.frame(posperd, negpred)
data.frame(pospred, negpred)
neg_pos_predictive=function(ratio, sensitivity, specificity) {
population=20000
haige=c(round(population*ratio*sensitivity, 0), round(population*ratio*(1-sensitivity), 0))
terve=c(round(population*(1-ratio)*(1-specificity), 0), round(population*(1-ratio)*specificity, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
pospred=haige[1]/(haige[1]+terve[1])
negpred=terve[2]/(haige[2]+terve[2])
return(as.data.frame(pospred, negpred))
}
neg_pos_predictive(ratio=0.5, sensitivity=0.638, specificity=0.95)
neg_pos_predictive=function(ratio, sensitivity, specificity) {
population=20000
haige=c(round(population*ratio*sensitivity, 0), round(population*ratio*(1-sensitivity), 0))
terve=c(round(population*(1-ratio)*(1-specificity), 0), round(population*(1-ratio)*specificity, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
pospred=haige[1]/(haige[1]+terve[1])
negpred=terve[2]/(haige[2]+terve[2])
return(sdata.frame(pospred, negpred))
}
neg_pos_predictive(ratio=0.5, sensitivity=0.638, specificity=0.95)
neg_pos_predictive=function(ratio, sensitivity, specificity) {
population=20000
haige=c(round(population*ratio*sensitivity, 0), round(population*ratio*(1-sensitivity), 0))
terve=c(round(population*(1-ratio)*(1-specificity), 0), round(population*(1-ratio)*specificity, 0))
tulem=c("test positiivne", "test negatiivne")
test_summary=data.frame(tulem, haige, terve)
pospred=haige[1]/(haige[1]+terve[1])
negpred=terve[2]/(haige[2]+terve[2])
return(data.frame(pospred, negpred))
}
neg_pos_predictive(ratio=0.5, sensitivity=0.638, specificity=0.95)
neg_pos_predictive(ratio=0.05, sensitivity=0.638, specificity=0.95)
neg_pos_predictive(ratio=0.005, sensitivity=0.638, specificity=0.95)
